
PLG_SYSTEM_MVCOVERRIDE="System - MVC Override"
PLG_SYSTEM_MVCOVERRIDE_DESC="Allows almost any php class or method to be overriden. Please make sure the plugin is the first by ordering, as other plugins may load classes before this plugin. In this case the plugin will not be able to override already loaded classes.<br />If your options cause a fatal error, you can temporary disable the plugin using ?mvcoverride_disable=1 or &mvcoverride_disable=1 in your URL."
PLG_SYSTEM_MVCOVERRIDE_LABLE_DEFAULT_RULE_GROUP_NAME="Group of rules"
PLG_SYSTEM_MVCOVERRIDE_LABEL_SWITCH_ACTIVE_RULES="Switch rules"
PLG_SYSTEM_MVCOVERRIDE_LABEL_SWITCH_ACTIVE_RULES_DESC="Choose either to use a set of fields, or a textarea fields (easier for copy/paste, no special files to be created)"
PLG_SYSTEM_MVCOVERRIDE_OPTION_TEXTAREA="Textarea"
PLG_SYSTEM_MVCOVERRIDE_OPTION_FIELDS="Set of fields"
PLG_SYSTEM_MVCOVERRIDE_LABEL_TEXTAREA="<b>Format example</b>.<br>You may set <br/> one or several rules separated by<br/<b>-.-.-.-.-</b><br/> <textarea readonly style='height:190px;font-size:8px;'>basePath:|:components/com_content/views/article/view.html.php\nclassName:|:ContentViewArticle\noption:|:com_content\nscope:|:site\nchangePrivate:|:0\nincludes:|:tmp/m1.php,tmp/m2.php\ncode:|:class ContentViewArticle extends ContentViewArticleDefault\n{\n\tfunction display($tpl = null)\n\t{\n\t\tJFactory::getApplication()->enqueueMessage('If you see this message, then ovveride works', 'message');\n\t\tparent::display($tpl);\n\t}\n}\n-.-.-.-.-\nbasePath:|:components/com_content/models/article.php\nclassName:|:ContentModelArticle\noption:|:com_content\nscope:|:site\nchangePrivate:|:0\nincludes:|:\ncode:|:class ContentModelArticle extends ContentModelArticleDefault {\n\tpublic function getItem($pk = null) {\n\t\t$temp = parent::getItem($pk);\n\t\t$temp->introtext = '<div style=\'border:1px solid red;\'>'.$temp->introtext.'</div>';\n\t\treturn $temp;\n\t}\n}</textarea>"
PLG_SYSTEM_MVCOVERRIDE_LABEL_RULE_ENABLED="Run the rule?"
PLG_SYSTEM_MVCOVERRIDE_LABEL_RULE_ENABLED_DESC="You can disable a rule but have settings saved for later usage or for an example"
PLG_SYSTEM_MVCOVERRIDE_OPTION_BACKEND_ONLY="Backend only"
PLG_SYSTEM_MVCOVERRIDE_OPTION_ALWAYS="Always"
PLG_SYSTEM_MVCOVERRIDE_OPTION_BOTH="Both"
PLG_SYSTEM_MVCOVERRIDE_OPTION_ADMIN="Admin"
PLG_SYSTEM_MVCOVERRIDE_OPTION_SITE="Site"
PLG_SYSTEM_MVCOVERRIDE_LABEL_SHOW_DEBUG_INFO="Show debug information"
PLG_SYSTEM_MVCOVERRIDE_LABEL_SHOW_DEBUG_INFO_DESC="Wrong plugin settings can raise errors such as a wrong file path or invalid PHP code to execute. It's recommended to have the debug on to test new settings, otherwise it may happen, that your settings just don't work and you have no idea why."
PLG_SYSTEM_MVCOVERRIDE_LABEL_BASECLASSPATH="Base Class Path"
PLG_SYSTEM_MVCOVERRIDE_LABEL_BASECLASSPATH_DESC="Path to the file containing the class to override. Start path from slash / to use absolute path. Otherwise the path will be considered as relative to the Joomla root. It's recommended to use relative path."
PLG_SYSTEM_MVCOVERRIDE_LABEL_OVERRIDECLASSPATH="Override Class Path"
PLG_SYSTEM_MVCOVERRIDE_LABEL_OVERRIDECLASSPATH_DESC="Path to the file containing the overrider class. Start path from slash / to use absolute path. Otherwise the path will be considered as relative to the plugin override folder <b>JOOMLAROOT/plugins/system/mvcoverride/code/</b>.<br /> This folder is proposed to store all override files in one place. It's also recommended to duplicate Joomla folder structure in the folder.<br />E.g. you want to override the following file <b>JOOMLAROOT/components/com_content/views/article/view.html.php</b>. Then place your overrider file here <b>JOOMLAROOT/plugins/system/mvcoverride/code/com_content/views/article/view.html.php</b> to keep things clear."
PLG_SYSTEM_MVCOVERRIDE_LABEL_BASECLASSNAME="Base Class Name"
PLG_SYSTEM_MVCOVERRIDE_LABEL_BASECLASSNAME_DESC="Name of the base class to be overridden.<br />E.g. <b>ContentViewArticle</b>"
PLG_SYSTEM_MVCOVERRIDE_LABEL_OPTION="Option (optional)"
PLG_SYSTEM_MVCOVERRIDE_LABEL_OPTION_DESC="Option parameter for the component where the class should be loaded. If left blank, the class will always be loaded."
PLG_SYSTEM_MVCOVERRIDE_LABEL_SCOPE="Scope"
PLG_SYSTEM_MVCOVERRIDE_LABEL_SCOPE_DESC="The scope to load the class in"
PLG_SYSTEM_MVCOVERRIDE_LABEL_MAKEEXTENDABLE="Make Extendable"
PLG_SYSTEM_MVCOVERRIDE_LABEL_MAKEEXTENDABLE_DESC="Changes all private methods in the base class to protected methods which allows the subclass to extend the base class better. This is not recommended unless you really need it."
PLG_SYSTEM_MVCOVERRIDE_LABEL_SUPPORTINGFILES="Supporting Files"
PLG_SYSTEM_MVCOVERRIDE_LABEL_SUPPORTINGFILES_DESC="Enter paths to any files that should be included before loading the base and override classes. One path per line. Can be absolute or relative to Joomla root."
PLG_SYSTEM_MVCOVERRIDE_EVAL_FAILED="Execution of eval failed. Error and code: "
PLG_SYSTEM_MVCOVERRIDE_LABEL_DEFAULT_RULE_GROUP_NAME="Default set of rules"
PLG_SYSTEM_MVCOVERRIDE_CLASS_IS_ALREADY_DECLARED="Class is already declared"
PLG_SYSTEM_MVCOVERRIDE_LABEL_BRUTE_MODE="Expert mode"
PLG_SYSTEM_MVCOVERRIDE_LABEL_BRUTE_MODE_DESC="Some extensions use not Joomla Framework, but direct PHP require_once/include_once commands. Such extension files can be overridden only using this mode. If enabled, then the target file (the core joomla/extension one) is temporary renamed, then an empty file is created and loaded instead, and finally the original file is placed back. Normally this should not cause problems, but who knows. So use this option with care only if you do really need it."
